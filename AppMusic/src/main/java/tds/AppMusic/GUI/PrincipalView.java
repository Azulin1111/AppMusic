package tds.AppMusic.GUI;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class PrincipalView extends JFrame {
    private JPanel mainPanel;
    private JPanel northPanel;
    private JButton buttonPremium;
    private JButton buttonLogout;
    private JLabel textName;
    private JPanel buttonPanel;
    private JPanel centralPanel;
    private JButton newListButton;
    private JButton recentButton;
    private JButton myPlaylistsButton;
    private JButton explorerButton;
    private JPanel explorerWindow;
    private JPanel newPlaylistWindow;
    private JPanel startWindow;
    private JPanel recentWindow;
    private JPanel myPlaylistWindow;
    private JLabel labelWelcome;
    private JTextField interpreterField;
    private JTextField titleField;
    private JTextField genreField;
    private JLabel interpreterLabel;
    private JLabel titleLabel;
    private JLabel GenreLabel;
    private JPanel explorerNorthPanel;
    private String user = "Evangeline";


    public PrincipalView() {
        super();
        $$$setupUI$$$();
        configureView();

        explorerButton.addActionListener(e -> {
            CardLayout cl = (CardLayout) (centralPanel.getLayout());
            cl.show(centralPanel, "explorer");
        });
        newListButton.addActionListener(e -> {
            CardLayout cl = (CardLayout) (centralPanel.getLayout());
            cl.show(centralPanel, "newPlaylist");
        });
        recentButton.addActionListener(e -> {
            CardLayout cl = (CardLayout) (centralPanel.getLayout());
            cl.show(centralPanel, "recent");
        });
        myPlaylistsButton.addActionListener(e -> {
            CardLayout cl = (CardLayout) (centralPanel.getLayout());
            cl.show(centralPanel, "myPlaylists");
        });
    }

    private void configureView() {
        this.setTitle("PrincipalView");
        this.setSize(700, 750);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(true);
        this.add(mainPanel);
        textName.setText("Hello, " + user); //TODO esto no sé si irá aquí (?)
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        northPanel = new JPanel();
        northPanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        northPanel.setBackground(new Color(-8747097));
        northPanel.setEnabled(false);
        mainPanel.add(northPanel, BorderLayout.NORTH);
        northPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, -1, -1, northPanel.getFont()), new Color(-9336645)));
        textName = new JLabel();
        textName.setText("");
        northPanel.add(textName);
        buttonPremium = new JButton();
        buttonPremium.setText("Premium");
        northPanel.add(buttonPremium);
        buttonLogout = new JButton();
        buttonLogout.setText("Logout");
        northPanel.add(buttonLogout);
        buttonPanel = new JPanel();
        buttonPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 1, new Insets(100, 0, 100, 0), -1, -1, false, true));
        buttonPanel.setBackground(new Color(-13223359));
        buttonPanel.setEnabled(true);
        mainPanel.add(buttonPanel, BorderLayout.WEST);
        newListButton = new JButton();
        newListButton.setText("New Playlist");
        buttonPanel.add(newListButton, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(140, 59), null, 0, false));
        recentButton = new JButton();
        recentButton.setText("Recent Songs");
        buttonPanel.add(recentButton, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(140, 30), null, 0, false));
        myPlaylistsButton = new JButton();
        myPlaylistsButton.setText("My Playlists");
        buttonPanel.add(myPlaylistsButton, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(140, 30), null, 0, false));
        explorerButton = new JButton();
        explorerButton.setText("Explorer");
        buttonPanel.add(explorerButton, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(140, 30), null, 0, false));
        centralPanel = new JPanel();
        centralPanel.setLayout(new CardLayout(0, 0));
        mainPanel.add(centralPanel, BorderLayout.CENTER);
        startWindow = new JPanel();
        startWindow.setLayout(new BorderLayout(0, 0));
        centralPanel.add(startWindow, "start");
        labelWelcome = new JLabel();
        Font labelWelcomeFont = this.$$$getFont$$$(null, -1, 28, labelWelcome.getFont());
        if (labelWelcomeFont != null) labelWelcome.setFont(labelWelcomeFont);
        labelWelcome.setHorizontalAlignment(0);
        labelWelcome.setHorizontalTextPosition(0);
        labelWelcome.setText("WELCOME TO APPMUSIC");
        startWindow.add(labelWelcome, BorderLayout.CENTER);
        explorerWindow = new JPanel();
        explorerWindow.setLayout(new BorderLayout(0, 0));
        centralPanel.add(explorerWindow, "explorer");
        explorerWindow.setBorder(BorderFactory.createTitledBorder(null, "EXPLORER", TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, Font.BOLD, -1, explorerWindow.getFont()), new Color(-16777216)));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        explorerWindow.add(panel1, BorderLayout.NORTH);
        final JLabel label1 = new JLabel();
        label1.setText("Label");
        panel1.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Label");
        panel1.add(label2, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Label");
        panel1.add(label3, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        interpreterField = new JTextField();
        panel1.add(interpreterField, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        titleField = new JTextField();
        panel1.add(titleField, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        genreField = new JTextField();
        panel1.add(genreField, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        newPlaylistWindow = new JPanel();
        newPlaylistWindow.setLayout(new BorderLayout(0, 0));
        centralPanel.add(newPlaylistWindow, "newPlaylist");
        newPlaylistWindow.setBorder(BorderFactory.createTitledBorder(null, "NEW PLAYLIST", TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, Font.BOLD, -1, newPlaylistWindow.getFont()), new Color(-16777216)));
        recentWindow = new JPanel();
        recentWindow.setLayout(new BorderLayout(0, 0));
        centralPanel.add(recentWindow, "recent");
        recentWindow.setBorder(BorderFactory.createTitledBorder(null, "RECENT SONGS", TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, Font.BOLD, -1, recentWindow.getFont()), new Color(-16777216)));
        myPlaylistWindow = new JPanel();
        myPlaylistWindow.setLayout(new BorderLayout(0, 0));
        centralPanel.add(myPlaylistWindow, "myPlaylists");
        myPlaylistWindow.setBorder(BorderFactory.createTitledBorder(null, "MY PLAYLISTS", TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, Font.BOLD, -1, myPlaylistWindow.getFont()), new Color(-16777216)));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
